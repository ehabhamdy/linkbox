Description: >
  Ehab / Udacity
  This template deploys the network infrastructure

Parameters:
    EnvironmentName:
        Description: Name tag to apply to resources
        Type: String
        Default: UdacityNetwork
    VpcCIDR:
        Description: CIDR block for the VPC
        Type: String
        Default: 10.0.0.0/16
    PublicSubnet1CIDR:
        Description: CIDR block for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.0.0/24
    PublicSubnet2CIDR:
        Description: CIDR block for the public subnet in the second Availability Zone
        Type: String
        Default: 10.0.1.0/24
    PrivateSubnet1CIDR:
        Description: CIDR block for the private subnet in the first Availability Zone
        Type: String
        Default: 10.0.2.0/24
    PrivateSubnet2CIDR:
        Description: CIDR block for the private subnet in the second Availability Zone
        Type: String
        Default: 10.0.3.0/24
Resources:
    VPC:
      Type: AWS::EC2::VPC
      Metadata:
        LastUpdated: "2025-10-08" 
      Properties:
        CidrBlock: !Ref VpcCIDR
        EnableDnsSupport: true
        EnableDnsHostnames: true
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName}-VPC
    
    # Internet Gateway
    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName}-IGW
    InternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        InternetGatewayId: !Ref InternetGateway
        VpcId: !Ref VPC
    
    # Public Subnets
    PublicSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref VPC
        CidrBlock: !Ref PublicSubnet1CIDR
        AvailabilityZone: !Select [ 0, !GetAZs '' ]
        MapPublicIpOnLaunch: true
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName}-PublicSubnet1-AZ1
      DependsOn: VPC
    PublicSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref VPC
        CidrBlock: !Ref PublicSubnet2CIDR
        AvailabilityZone: !Select [ 1, !GetAZs '' ]
        MapPublicIpOnLaunch: true
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName}-PublicSubnet2-AZ2
      DependsOn: VPC
    PrivateSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref VPC
        CidrBlock: !Ref PrivateSubnet1CIDR
        AvailabilityZone: !Select [ 0, !GetAZs '' ]
        MapPublicIpOnLaunch: false
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName}-PrivateSubnet1-AZ1
      DependsOn: VPC
    PrivateSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref VPC
        CidrBlock: !Ref PrivateSubnet2CIDR
        AvailabilityZone: !Select [ 1, !GetAZs '' ]
        MapPublicIpOnLaunch: false
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName}-PrivateSubnet2-AZ2
      DependsOn: VPC
    
    # NAT Gateways
    NatGateway1EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties:
        Domain: vpc
    NatGateway2EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties:
        Domain: vpc
    NatGateway1:
      Type: AWS::EC2::NatGateway
      Properties:
        AllocationId: !GetAtt NatGateway1EIP.AllocationId
        SubnetId: !Ref PublicSubnet1
    NatGateway2:
      Type: AWS::EC2::NatGateway
      Properties:
        AllocationId: !GetAtt NatGateway2EIP.AllocationId
        SubnetId: !Ref PublicSubnet2
    
Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPC
  InternetGateway:
    Value: !Ref InternetGateway
    Export:
      Name: !Sub ${EnvironmentName}-IGW
